version: "3.3"

services:
  app:
    image: oeffikator
    build:
      context: .
      dockerfile: oeffikator/Dockerfile
    ports:
      - 8000:8000
    environment:
      OEFFI_DB_NAME: ${OEFFI_DB_NAME}
      OEFFI_DB_CONTAINER_NAME: ${OEFFI_DB_CONTAINER_NAME}
    depends_on:
      db:
        condition: service_healthy
    secrets:
      - oeffi_db_user
      - oeffi_db_pw
    container_name: ${OEFFI_APP_CONTAINER_NAME}

  db:
    image: postgis/postgis
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER_FILE: /run/secrets/oeffi_db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/oeffi_db_pw
      POSTGRES_DB: ${OEFFI_DB_NAME}
    secrets:
      - oeffi_db_user
      - oeffi_db_pw
    volumes:
      - ./scripts/:/docker-entrypoint-initdb.d/
      - pgdata:/var/lib/postgresql/data:rw
    container_name: ${OEFFI_DB_CONTAINER_NAME}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $(cat /run/secrets/oeffi_db_user) -d ${OEFFI_DB_NAME}"
        ]
      interval: 5s
      timeout: 5s
      retries: 3

  visualization:
    image: visualization
    build:
      context: .
      dockerfile: visualization/Dockerfile
    ports:
      - "8080:8080"
    environment:
      OEFFI_APP_CONTAINER_NAME: ${OEFFI_APP_CONTAINER_NAME}
    depends_on:
      - app

secrets:
  oeffi_db_pw:
    file: oeffikator_db_pw.txt
  oeffi_db_user:
    file: oeffikator_db_user.txt

volumes:
  pgdata:
